{
   "name": "commiter-ai-generator",
   "displayName": "Commiter Ai",
   "description": "Effortlessly generate smart commit messages with AI, powered by OpenRouter. Streamline your workflow and maintain a clean commit history.",
   "version": "1.0.4",
   "publisher": "r1cco",
   "license": "MIT",
   "engines": {
      "vscode": "^1.48.0"
   },
   "pricing": "Free",
   "categories": [
      "Machine Learning",
      "Other"
   ],
   "keywords": [
      "ai",
      "artificial intelligence",
      "commit",
      "commit message",
      "commit messages",
      "commit norm",
      "commit norms",
      "generate commit",
      "generate commit message",
      "generator commit",
      "openrouter",
      "openai",
      "gemini",
      "llm"
   ],
   "galleryBanner": {
      "color": "#4F4FFF",
      "theme": "dark"
   },
   "main": "./out/extension.js",
   "activationEvents": [],
   "contributes": {
      "commands": [
         {
            "command": "commiter_ai.generateCommit",
            "title": "Generate Commit",
            "category": "Commit AI",
            "icon": {
               "light": "src/assets/button_light.png",
               "dark": "src/assets/button_dark.png"
            }
         }
      ],
      "menus": {
         "scm/title": [
            {
               "command": "commiter_ai.generateCommit",
               "when": "scmProvider == git",
               "group": "navigation"
            }
         ]
      },
      "configuration": {
         "title": "Commit AI",
         "properties": {
            "commiter_ai.api_key": {
               "type": "string",
               "default": null,
               "markdownDescription": "Your API key. To get your API key, visit [openrouter.ai](https://openrouter.ai), select a model, click 'Copy' and paste here."
            },
            "commiter_ai.prompt.max_tokens": {
               "type": "number",
               "default": 200000,
               "minimum": 10,
               "markdownDescription": "The maximum number of tokens to generate in the completion. Adjust the value based on the model you are using."
            },
            "commiter_ai.prompt.custom_prompt": {
               "type": "string",
               "default": "",
               "markdownDescription": "Set a custom prompt describing the commit message format to generate."
            },
            "commiter_ai.prompt.temperature": {
               "type": "number",
               "default": 0.7,
               "minimum": 0,
               "maximum": 2,
               "markdownDescription": "Controls randomness: Lowering results in less random completions. As the temperature approaches zero, the model will become deterministic and repetitive. **``0.7`` is recommended**"
            },
            "commiter_ai.prompt.model": {
               "type": "string",
               "default": "google/gemini-2.0-pro-exp-02-05:free",
               "markdownDescription": "The model to use for generating commit messages. Visit [openrouter.ai](https://openrouter.ai), select a model, click 'Copy' and paste here. Pricing varies by model. Check [OpenRouter pricing](https://openrouter.ai/pricing) for details."
            },
            "commiter_ai.prompt.commit_style": {
               "type": "string",
               "enum": [
                  "conventional",
                  "linus",
                  "imperative",
                  "prefix",
                  "context",
                  "ticket",
                  "symbol",
                  "concise"
               ],
               "default": "conventional",
               "enumDescriptions": [
                  "Conventional Commits (feat: add login feature)",
                  "Linus Torvalds style (Title followed by detailed explanation)",
                  "Imperative verb style (Add login feature)",
                  "Simple prefix style (fix: login bug)",
                  "Context style ([frontend] Add login component)",
                  "Ticket ID style (JIRA-101 - Add feature X)",
                  "Symbol style ([+] Add search feature)",
                  "Concise style (brief and to the point)"
               ],
               "markdownDescription": "Select a predefined commit message style or format."
            }
         }
      }
   },
   "scripts": {
      "vscode:prepublish": "npm run build",
      "compile": "tsc -p tsconfig.json && node ./out/utils/fix-aliases.js",
      "build": "tsc -p tsconfig.json && node ./out/utils/fix-aliases.js",
      "dev": "tsx ./src/extension.ts",
      "watch": "tsx watch ./src/extension.ts",
      "start": "node --import tsx/esm ./out/extension.js",
      "pretest": "npm run compile && npm run lint",
      "lint": "eslint src --ext ts",
      "test": "node ./out/test/runTest.js",
      "style": "eslint --fix src/**/*.ts",
      "package": "npm run build && npx @vscode/vsce package"
   },
   "devDependencies": {
      "@eslint/js": "^9.22.0",
      "@types/mocha": "^10.0.10",
      "@types/node": "~18.19.80",
      "@types/sinon": "^17.0.4",
      "@types/vscode": "^1.48.0",
      "@vscode/test-electron": "^2.4.1",
      "esbuild": "^0.19.12",
      "eslint": "^9.22.0",
      "globals": "^16.0.0",
      "lodash": "^4.17.21",
      "mocha": "^11.1.0",
      "prettier": "3.5.3",
      "sinon": "^19.0.2",
      "tsx": "^4.19.3",
      "typescript-eslint": "^8.26.1"
   },
   "repository": {
      "type": "git",
      "url": "git+https://github.com/rafaeelricco/commiter-ai.git"
   },
   "author": "Rafael Ricco",
   "bugs": {
      "url": "https://github.com/rafaeelricco/commiter-ai/issues"
   },
   "homepage": "https://github.com/rafaeelricco/commiter-ai#readme",
   "dependencies": {
      "dotenv": "^16.4.5",
      "glob": "^11.0.1",
      "openai": "^4.87.3",
      "typescript": "^5.8.2"
   },
   "bundleDependencies": [
      "glob",
      "typescript",
      "openai",
      "dotenv",
      "vscode"
   ],
   "packageManager": "npm@9.5.0",
   "vsce": {
      "dependencies": true,
      "devDependencies": false,
      "files": [
         "src/assets/**/*"
      ]
   }
}
