{
   "name": "commiter-ai-generator",
   "displayName": "Commiter Ai",
   "description": "Effortlessly generate smart commit messages with AI. Streamline your workflow and maintain a clean commit history.",
   "version": "1.1.6",
   "publisher": "r1cco",
   "license": "MIT",
   "engines": {
      "vscode": "^1.48.0"
   },
   "pricing": "Free",
   "categories": [
      "Machine Learning",
      "Other"
   ],
   "keywords": [
      "vscode",
      "vscode-extension",
      "git",
      "developer-tools",
      "ai-commit-messages",
      "automated-commits",
      "llm",
      "code-productivity",
      "git-workflow",
      "commit-automation",
      "ai-code-assistant",
      "openrouter",
      "openai",
      "gemini",
      "code-repository"
   ],
   "galleryBanner": {
      "color": "#4F4FFF",
      "theme": "light"
   },
   "main": "./out/extension.js",
   "activationEvents": [],
   "contributes": {
      "viewsContainers": {
         "activitybar": [
            {
               "id": "commiterAiActivity",
               "title": "Commiter AI",
               "icon": "src/assets/dark-icon-sidebar.svg"
            }
         ]
      },
      "views": {
         "commiterAiActivity": [
            {
               "id": "commiterAiView",
               "name": "Generate Commit",
               "type": "webview",
               "contextualTitle": "Commiter AI"
            }
         ]
      },
      "commands": [
         {
            "command": "commiter_ai.generate_commit",
            "title": "Generate Commit",
            "category": "Commit AI",
            "icon": {
               "light": "src/assets/white-icon-sidebar.svg ",
               "dark": "src/assets/dark-icon-sidebar.svg"
            }
         }
      ],
      "menus": {
         "scm/title": [
            {
               "command": "commiter_ai.generate_commit",
               "when": "scmProvider == git",
               "group": "navigation"
            }
         ]
      },
      "configuration": {
         "title": "Commiter Ai",
         "properties": {
            "commiter_ai.api_key": {
               "title": "API Key",
               "type": "string",
               "default": null,
               "markdownDescription": "**Required:**\nObtain your API key from [OpenRouter.ai](https://openrouter.ai/keys). Navigate to 'Keys' > 'Create New Key', copy and paste here.\n\n**Security Note:** Keep this private - never commit it publicly!"
            },
            "commiter_ai.prompt.custom_prompt": {
               "title": "Custom Prompt",
               "type": "string",
               "default": "",
               "markdownDescription": "**Custom Instructions**\nOverride default behavior with specific guidelines. Example:\n\n`Generate concise commits that:\n- Start with emoji\n- Reference JIRA tickets\n- Use present tense`\n\nLeave empty to use default settings"
            },
            "commiter_ai.prompt.temperature": {
               "title": "Creativity",
               "type": "number",
               "default": 0.7,
               "minimum": 0,
               "maximum": 2,
               "markdownDescription": "**Creativity**\n- 0.0: Predictable output\n- 0.7: Balanced (recommended)\n- 2.0: Experimental\n\nLower values follow strict conventions"
            },
            "commiter_ai.prompt.model": {
               "title": "AI Model",
               "type": "string",
               "default": "openrouter/quasar-alpha",
               "markdownDescription": "**AI Model Selection**\nChoose from [OpenRouter models](https://openrouter.ai/models). Consider:\n- Cost per token\n- Context window size\n- Response speed"
            },
            "commiter_ai.prompt.commit_style": {
               "title": "Commit Style",
               "type": "string",
               "enum": [
                  "conventional",
                  "linus",
                  "context",
                  "ticket",
                  "symbol",
                  "concise"
               ],
               "default": "conventional",
               "enumDescriptions": [
                  "**Conventional Commits**\n`feat: add login validation`\nStructured format for automated changelogs, focusing on type and description.",
                  "**Linus Style**\n`Login System\n\n- Implement OAuth2 flow\n- Add error handling`\nA title followed by a detailed body, suitable for complex changes.",
                  "**Contextual**\n`[auth] update session timeout`\nIncludes the context of the change, providing clarity on the area affected.",
                  "**Ticket Reference**\n`PROJ-123: add user dashboard`\nReferences a ticket ID in the message for traceability.",
                  "**Symbol Notation**\n`[+] Enable dark mode toggle`\nUses symbols to indicate the type of change visually.",
                  "**Concise**\n`Optimize image loading`\nA brief summary that captures the essence of the change without extra formatting."
               ],
               "markdownDescription": "Select a predefined commit message style or format."
            },
            "commiter_ai.sound_enabled": {
               "title": "Sound Feedback",
               "type": "boolean",
               "default": true,
               "markdownDescription": "**Sound Feedback**\nEnables/disables the confirmation sound when the commit is successfully generated."
            }
         }
      }
   },
   "scripts": {
      "dev": "tsx ./src/extension.ts",
      "dev:watch": "./development/scripts/dev.sh",
      "watch": "tsc -p tsconfig.json -w --preserveWatchOutput",
      "build": "tsc -p tsconfig.json && tsx ./src/utils/fix-aliases.ts",
      "lint": "eslint src --ext ts",
      "test": "tsc -p tsconfig.json && tsx ./src/utils/fix-aliases.ts && tsx ./src/test/run-tests.ts",
      "package": "npm run build && npx @vscode/vsce package"
   },
   "devDependencies": {
      "@types/sound-play": "^1.1.3",
      "@types/mocha": "^10.0.10",
      "@types/node": "~18.19.80",
      "@types/sinon": "^17.0.4",
      "@types/vscode": "^1.48.0",
      "@vscode/test-electron": "^2.4.1",
      "@eslint/js": "^9.22.0",
      "esbuild": "^0.19.12",
      "eslint": "^9.22.0",
      "globals": "^16.0.0",
      "lodash": "^4.17.21",
      "mocha": "^11.1.0",
      "prettier": "3.5.3",
      "sinon": "^19.0.2",
      "tsx": "^4.19.3",
      "typescript-eslint": "^8.26.1"
   },
   "repository": {
      "type": "git",
      "url": "git+https://github.com/rafaeelricco/commiter-ai.git"
   },
   "author": "Rafael Ricco",
   "bugs": {
      "url": "https://github.com/rafaeelricco/commiter-ai/issues"
   },
   "homepage": "https://github.com/rafaeelricco/commiter-ai#readme",
   "dependencies": {
      "glob": "^11.0.1",
      "sound-play": "^1.1.0",
      "typescript": "^5.8.2"
   },
   "bundleDependencies": [
      "glob",
      "vscode",
      "sound-play"
   ],
   "packageManager": "npm@9.5.0",
   "vsce": {
      "dependencies": true,
      "devDependencies": false,
      "files": [
         "src/assets/**/*"
      ]
   }
}
